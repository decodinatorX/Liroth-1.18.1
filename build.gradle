plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://maven.kosmx.dev/' }
	maven { url "https://maven.dblsaiko.net/" }
    maven { url "https://maven.fabricmc.net/" }
    maven { url 'https://maven.blamejared.com' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases' }
	maven { url "https://maven.ladysnake.org/releases" }
	maven { url "https://cursemaven.com" }
	maven { url 'https://maven.kyrptonaught.dev' }
    maven { url "https://hephaestus.dev/release" }
    maven { url 'https://jitpack.io' }
	maven { url 'https://dvs1.progwml6.com/files/maven/' }
	maven { url 'https://maven.blamejared.com/mezz/jei/' }
	maven { url 'https://modmaven.dev' }
	maven { url "https://api.modrinth.com/maven" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "curse.maven:bclib-495191:4572719"
    modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta54-1.19'
	include 'net.kyrptonaught:customportalapi:0.0.1-beta54-1.19'
  	modCompileOnlyApi("mezz.jei:jei-1.19.2-common-api:11.5.0.297")
  	modCompileOnlyApi("mezz.jei:jei-1.19.2-fabric-api:11.5.0.297")
  	modRuntimeOnly("mezz.jei:jei-1.19.2-fabric:11.5.0.297")
	modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}") { transitive false }
	modApi("me.shedaniel.cloth:cloth-config-fabric:9.1.104") { exclude(group: "net.fabricmc.fabric-api") }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}

loom {
	accessWidenerPath = file("src/main/resources/liroth.accesswidener")
}