plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
def local_bclib = findProject(':BCLib') != null
def local_wunderlib = findProject(':WunderLib') != null

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url 'https://maven.kosmx.dev/' }
	maven { url "https://maven.dblsaiko.net/" }
    maven { url "https://maven.fabricmc.net/" }
    maven { url 'https://maven.blamejared.com' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases' }
	maven { url 'https://maven.kyrptonaught.dev' }
    maven { url "https://hephaestus.dev/release" }
    maven { url 'https://jitpack.io' }
	maven { url 'https://dvs1.progwml6.com/files/maven/' }
	maven { url 'https://maven.blamejared.com/mezz/jei/' } // don't feel like removing this one lmfao
	maven { url 'https://maven.blamejared.com/' } // for Patchouli
	maven { url 'https://modmaven.dev' }
	maven { url 'https://api.modrinth.com/maven' }
    maven { url 'https://maven.terraformersmc.com' }
	maven { url "https://maven.bai.lol" }
	maven {	url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' } content {
		includeGroupByRegex("software\\.bernie.*")
		includeGroup("com.eliotlash.mclib")
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft ("com.mojang:minecraft:${project.minecraft_version}")
    mappings loom.officialMojangMappings()
	modImplementation ("net.fabricmc:fabric-loader:${project.loader_version}")

	modImplementation "software.bernie.geckolib:geckolib-fabric-${minecraft_version}:4.4.6"
	implementation("com.eliotlash.mclib:mclib:20")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
    modImplementation ('net.kyrptonaught:customportalapi:0.0.1-beta63-1.20') {exclude(group: "net.fabricmc.fabric-api")}
	include ('net.kyrptonaught:customportalapi:0.0.1-beta64-1.20') {exclude(group: "net.fabricmc.fabric-api")}

 	// compile against the JEI API but do not include it at runtime
  	modCompileOnlyApi("mezz.jei:jei-1.20.1-common-api:15.3.0.4") {exclude(group: "net.fabricmc.fabric-api")}
  	modCompileOnlyApi("mezz.jei:jei-1.20.1-fabric-api:15.3.0.4") {exclude(group: "net.fabricmc.fabric-api")}
  	// at runtime, use the full JEI jar for Fabric
  	modRuntimeOnly("mezz.jei:jei-1.20.1-fabric:15.3.0.4") {exclude(group: "net.fabricmc.fabric-api")}
    
  	modCompileOnly("com.terraformersmc:modmenu:${project.mod_menu_version}") {exclude(group: "net.fabricmc.fabric-api")}
  
  	modApi("me.shedaniel.cloth:cloth-config-fabric:11.1.118") {exclude(group: "net.fabricmc.fabric-api")}

	modImplementation ("vazkii.patchouli:Patchouli:1.20.1-84-FABRIC") {exclude(group: "net.fabricmc.fabric-api")}  //i really gotta clean above lmfao

	println "Using local BCLib: ${local_bclib}"
		if (local_bclib) {
			implementation (project(path: ":BCLib", configuration: 'dev')) {exclude(group: "net.fabricmc.fabric-api")}
		} else {
			modImplementation ("com.github.quiqueck:BCLib:${project.bclib_version}") {exclude(group: "net.fabricmc.fabric-api")}
		}

		if (local_wunderlib) {
			println "Using local WunderLib"
			implementation (project(path: ":WunderLib", configuration: 'dev')) {exclude(group: "net.fabricmc.fabric-api")}
		} else {
			implementation ('com.github.quiqueck:WunderLib:1.1.5') {exclude(group: "net.fabricmc.fabric-api")}
		}
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
	
loom {
    accessWidenerPath = file("src/main/resources/liroth.accesswidener")
	}
}
